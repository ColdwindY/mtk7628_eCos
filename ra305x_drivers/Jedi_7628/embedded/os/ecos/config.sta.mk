# Support Multiple Interface within single driver
HAS_MULTI_INF=n
# Support ATE function
HAS_ATE=n

# Support SNIFFER function
HAS_SNIFFER_SUPPORT=n

# Support CFG802.11 function
HAS_CFG80211_SUPPORT=n

# Support TXBF function
HAS_TXBF_SUPPORT=n

# Support MCAST_RATE_SPECIFIC function
HAS_RT2860V2_MCAST_RATE_SPECIFIC=n

# Support ATE NEW TXCONT solution
HAS_NEW_TXCONT=n

# Support QA ATE function
HAS_QA_SUPPORT=n

#ifdef RSSI_FEEDBACK
HAS_RSSI_FEEDBACK=n
#endif // RSSI_FEEDBACK //

#ifdef XLINK_SUPPORT
# Support XLINK mode
HAS_XLINK=n
#endif // XLINK_SUPPORT //

#ifdef WSC_INCLUDED
# Support WSC function
HAS_WSC=n
#ifdef WSC_V2_SUPPORT
HAS_WSC_V2=n
#endif // WSC_V2_SUPPORT //
HAS_WSC_LED=n
HAS_WSC_NFC=n
#endif // WSC_INCLUDED //


# Support LLTD function
HAS_LLTD=n

#ifdef UAPSD_SUPPORT
HAS_UAPSD_SUPPORT=n
#endif

#ifdef WDS_SUPPORT
# Support WDS function
HAS_WDS=n
#endif // WDS_SUPPORT //

#ifdef APCLI_SUPPORT
# Support AP-Client function
HAS_APCLI=n
#endif // APCLI_SUPPORT //

#Support MAC PassThrough to RootAP
HAS_MAC_REPEATER_SUPPORT=n



#Support Net interface block while Tx-Sw queue full
HAS_BLOCK_NET_IF=n

#Support IGMP-Snooping function.
HAS_IGMP_SNOOP_SUPPORT=n

#Support DFS function
HAS_DFS_SUPPORT=n

#Support Carrier-Sense function
HAS_CS_SUPPORT=n
#Support HE_BD_SUPPORT
HAS_HE_BD_SUPPORT=n


# Support user specific transmit rate of Multicast packet.
HAS_MCAST_RATE_SPECIFIC_SUPPORT=n

#ifdef MULTI_CARD
# Support for Multiple Cards
HAS_MC_SUPPORT=n
#endif // MULTI_CARD //

#Support for PCI-MSI
HAS_MSI_SUPPORT=n

#Support for IEEE802.11e DLS
HAS_QOS_DLS_SUPPORT=n

#Support for EXT_CHANNEL
HAS_EXT_BUILD_CHANNEL_LIST=n

#Support for IDS 
HAS_IDS_SUPPORT=n


#Support for Net-SNMP
HAS_SNMP_SUPPORT=n

#ifdef DOT11N_DRAFT3
#Support features of 802.11n Draft3
HAS_DOT11N_DRAFT3_SUPPORT=y
#endif // DOT11N_DRAFT3 //

#Support features of Single SKU. 
HAS_SINGLE_SKU_SUPPORT=n

#Support features of Single SKU. 
HAS_SINGLE_SKU_V2_SUPPORT=n

#ifdef DOT11_N_SUPPORT
#Support features of 802.11n
HAS_DOT11_N_SUPPORT=y
#endif // DOT11_N_SUPPORT //
#ifdef DOT11_VHT_SUPPORT
#Support for 802.11ac VHT
HAS_DOT11_VHT_SUPPORT=n
#endif // DOT11_VHT_SUPPORT //




HAS_KTHREAD_SUPPORT=n




#Support for Auto channel select enhance
HAS_AUTO_CH_SELECT_ENHANCE=n

#Support statistics count
HAS_STATS_COUNT=n



#Client support WDS function
HAS_CLIENT_WDS_SUPPORT=n

#Support for Bridge Fast Path & Bridge Fast Path function open to other module
HAS_BGFP_SUPPORT=n
HAS_BGFP_OPEN_SUPPORT=n


#ifdef CONFIG_AP_SUPPORT
#Support GreenAP function
HAS_GREENAP_SUPPORT=n
#endif // CONFIG_AP_SUPPORT //



HAS_RTMP_FLASH_SUPPORT=y

#ifdef LED_CONTROL_SUPPORT
HAS_LED_CONTROL_SUPPORT=n
#endif // LED_CONTROL_SUPPORT //

#ifdef CONFIG_WIFI_LED_SHARE 
HAS_WIFI_LED_SHARE=n
#endif // CONFIG_WIFI_LED_SHARE //

# Trigger the WPS & Restore button of platform
HAS_PLATFORM_BUTTON_SUPPORT=n

#ifdef CONFIG_CALIBRATION_COLLECTION
HAS_CALIBRATION_COLLECTION_SUPPORT=n
#endif

#ifdef CONFIG_CAL_FREE_IC_SUPPORT
HAS_CAL_FREE_IC_SUPPORT=y
#endif

#ifdef THERMAL_PROTECT_SUPPORT
HAS_THERMAL_PROTECT_SUPPORT=y
#endif

#ifdef ANDES_FIRMWARE_SUPPORT
HAS_ANDES_FIRMWARE_SUPPORT=n
#endif

#################################################

WFLAGS := -DAGGREGATION_SUPPORT -DPIGGYBACK_SUPPORT -DWMM_SUPPORT -Wall -Wstrict-prototypes -Wno-trigraphs 
WFLAGS += -DENHANCED_STAT_DISPLAY -DRESOURCE_PRE_ALLOC

ifeq ($(HAS_UAPSD_SUPPORT),y)
WFLAGS += -DUAPSD_SUPPORT -DUAPSD_DEBUG
endif


ifeq ($(HAS_CAL_FREE_IC_SUPPORT),y)
WFLAGS += -DCAL_FREE_IC_SUPPORT
endif

ifeq ($(HAS_KTHREAD_SUPPORT),y)
WFLAGS += -DKTHREAD_SUPPORT
endif

ifeq ($(HAS_RTMP_FLASH_SUPPORT),y)
WFLAGS += -DRTMP_FLASH_SUPPORT
endif

ifeq ($(HAS_SINGLE_SKU_V2_SUPPORT),y)
WFLAGS += -DSINGLE_SKU_V2
endif

#SNIFFER
ifeq ($(HAS_SNIFFER_SUPPORT),y)
    WFLAGS += -DCONFIG_SNIFFER_SUPPORT
endif

#TXBF
ifeq ($(HAS_TXBF_SUPPORT),y)
    WFLAGS += -DMCS_LUT_SUPPORT -DTXBF_SUPPORT -DVHT_TXBF_SUPPORT
endif

#MCAST_RATE_SPECIFIC
ifeq ($(HAS_RT2860V2_MCAST_RATE_SPECIFIC),y)
    WFLAGS += -DMCAST_RATE_SPECIFIC
endif

#ifdef CONFIG_AP_SUPPORT
# config for AP mode

ifeq ($(RT28xx_MODE),AP)
WFLAGS += -DCONFIG_AP_SUPPORT -DMBSS_SUPPORT -DIAPP_SUPPORT  -DDOT1X_SUPPORT -DAP_SCAN_SUPPORT -DSCAN_SUPPORT
WFLAGS += -DDBG

ifeq ($(HAS_ATE),y)
WFLAGS += -DCONFIG_ATE
WFLAGS += -DCONFIG_RT2880_ATE_CMD_NEW
#ifeq ($(HAS_NEW_TXCONT),y)
#WFLAGS += -DNEW_TXCONT
#endif

WFLAGS += -I$(RT28xx_DIR)/ate/include

ifeq ($(HAS_QA_SUPPORT),y)
WFLAGS += -DCONFIG_QA
endif
endif

#ifdef RSSI_FEEDBACK
ifeq ($(HAS_RSSI_FEEDBACK),y)
WFLAGS += -DRSSI_FEEDBACK
endif
#endif // RSSI_FEEDBACK //




#ifdef WSC_INCLUDED
ifeq ($(HAS_WSC),y)
WFLAGS += -DWSC_AP_SUPPORT 
#ifdef WSC_V2_SUPPORT
ifeq ($(HAS_WSC_V2),y)
WFLAGS += -DWSC_V2_SUPPORT
endif
#endif // WSC_V2_SUPPORT //
ifeq ($(HAS_WSC_LED),y)
WFLAGS += -DWSC_LED_SUPPORT
endif
endif
#endif // WSC_INCLUDED //


#ifdef WDS_SUPPORT
ifeq ($(HAS_WDS),y)
WFLAGS += -DWDS_SUPPORT
endif
#endif // WDS_SUPPORT //

#ifdef APCLI_SUPPORT
ifeq ($(HAS_APCLI),y)
WFLAGS += -DAPCLI_SUPPORT -DMAT_SUPPORT -DAP_SCAN_SUPPORT -DSCAN_SUPPORT -DAPCLI_AUTO_CONNECT_SUPPORT -DAPCLI_AUTO_BW_TMP
#ifeq ($(HAS_ETH_CONVERT_SUPPORT), y)
#WFLAGS += -DETH_CONVERT_SUPPORT
#endif 
ifeq ($(HAS_MAC_REPEATER_SUPPORT),y)
WFLAGS += -DMAC_REPEATER_SUPPORT
endif
endif
#endif // APCLI_SUPPORT //

ifeq ($(HAS_IGMP_SNOOP_SUPPORT),y)
WFLAGS += -DIGMP_SNOOP_SUPPORT
endif

ifeq ($(HAS_CS_SUPPORT),y)
WFLAGS += -DCARRIER_DETECTION_SUPPORT
endif

ifeq ($(HAS_MCAST_RATE_SPECIFIC_SUPPORT), y)
WFLAGS += -DMCAST_RATE_SPECIFIC
endif



ifeq ($(HAS_QOS_DLS_SUPPORT),y)
WFLAGS += -DQOS_DLS_SUPPORT
endif

ifeq ($(HAS_SNMP_SUPPORT),y)
WFLAGS += -DSNMP_SUPPORT
endif


ifeq ($(HAS_SINGLE_SKU_SUPPORT),y)
WFLAGS += -DSINGLE_SKU
endif

#ifdef DOT11_N_SUPPORT
ifeq ($(HAS_DOT11_N_SUPPORT),y)
WFLAGS += -DDOT11_N_SUPPORT #-DBW_FALLBACK_SUPPORT
WFLAGS += -DMT_PS
#ifdef DOT11N_DRAFT3
ifeq ($(HAS_DOT11N_DRAFT3_SUPPORT),y)
WFLAGS += -DDOT11N_DRAFT3
endif
#endif // DOT11N_DRAFT3 //
endif
ifeq ($(HAS_GREENAP_SUPPORT),y)
WFLAGS += -DGREENAP_SUPPORT
endif
#endif // DOT11_N_SUPPORT //

ifeq ($(HAS_AUTO_CH_SELECT_ENHANCE),y)
WFLAGS += -DAUTO_CH_SELECT_ENHANCE
endif

ifeq ($(HAS_STATS_COUNT),y)
WFLAGS += -DSTATS_COUNT_SUPPORT
endif



endif #// endif of RT2860_MODE == AP //
#endif // CONFIG_AP_SUPPORT //

#################################################


#################################################

#################################################

#
# Common compiler flag
#






ifeq ($(HAS_EXT_BUILD_CHANNEL_LIST),y)
WFLAGS += -DEXT_BUILD_CHANNEL_LIST
endif

ifeq ($(HAS_IDS_SUPPORT),y)
WFLAGS += -DIDS_SUPPORT
endif


ifeq ($(HAS_CLIENT_WDS_SUPPORT),y)
WFLAGS += -DCLIENT_WDS
endif

ifeq ($(HAS_BGFP_SUPPORT),y)
WFLAGS += -DBG_FT_SUPPORT
endif

ifeq ($(HAS_BGFP_OPEN_SUPPORT),y)
WFLAGS += -DBG_FT_OPEN_SUPPORT
endif


#ifdef LED_CONTROL_SUPPORT
ifeq ($(HAS_LED_CONTROL_SUPPORT),y)
WFLAGS += -DLED_CONTROL_SUPPORT
endif
#endif // LED_CONTROL_SUPPORT //

ifeq ($(HAS_PLATFORM_BUTTON_SUPPORT),y)
WFLAGS += -DPLATFORM_BUTTON_SUPPORT
endif

#ifdef CONFIG_CALIBRATION_COLLECTION
ifeq ($(HAS_CALIBRATION_COLLECTION_SUPPORT),y)
WFLAGS += -DCONFIG_CALIBRATION_COLLECTION
endif
#endif
#################################################
# ChipSet specific definitions.
#


#ifdef RT5350
ifeq ($(CHIPSET), 5350)
WFLAGS += -DRTMP_MAC_PCI -DRTMP_RBUS_SUPPORT -DRT5350 -DRT305x -DRT3050 -DRT3350 -DRTMP_RF_RW_SUPPORT -DSPECIFIC_BCN_BUF_SUPPORT -DVCORECAL_SUPPORT -DCONFIG_SWMCU_SUPPORT -DRTMP_INTERNAL_TX_ALC -DRTMP_FREQ_CALIBRATION_SUPPORT -DIQ_CAL_SUPPORT -DHW_ANTENNA_DIVERSITY_SUPPORT -DRALINK_GPIO_LED_LOW_ACT
CHIPSET_DAT = 2860
ifeq ($(HAS_WIFI_LED_SHARE), y)
WFLAGS += -DCONFIG_WIFI_LED_SHARE
endif
endif
#endif // RT5350 //


#################################################
# ChipSet specific definitions  - MT Series
#
#################################################

# MT7603 =>7620 temp
ifneq ($(findstring mt7603e,$(CHIPSET)),)
WFLAGS += -DMT7603 -DMT_BBP -DMT_RF -DRTMP_RF_RW_SUPPORT -DMT_MAC -DRTMP_MAC_PCI -DRTMP_PCI_SUPPORT -DMCS_LUT_SUPPORT -DUSE_BMC #-DRTMP_RBUS_SUPPORT
#WFLAGS += -DRTMP_EFUSE_SUPPORT 
#-DNEW_MBSSID_MODE 
WFLAGS += -DCONFIG_ANDES_SUPPORT
HAS_NEW_RATE_ADAPT_SUPPORT=y
ifeq ($(HAS_NEW_RATE_ADAPT_SUPPORT),y)
WFLAGS += -DNEW_RATE_ADAPT_SUPPORT
endif

#WFLAGS += -DMT7603_FPGA -DCONFIG_FPGA_MODE
WFLAGS += -DCONFIG_FPGA_MODE
WFLAGS += -DRELEASE_EXCLUDE

HAS_MT_BBP=y
HAS_MT_MAC=y
HAS_INF_PCI=y
#HAS_INF_RBUS=y
HAS_MAC_PCI=y
HAS_MT_MAC=y
HAS_MT_RF=y

CHIPSET_DAT = 2860
endif

ifneq ($(findstring mt7603u,$(CHIPSET)),)
WFLAGS += -DMT7603 -DMT_BBP -DMT_RF -DRTMP_RF_RW_SUPPORT -DMT_MAC -DRTMP_MAC_USB -DRTMP_USB_SUPPORT -DMCS_LUT_SUPPORT -DRTMP_TIMER_TASK_SUPPORT
WFLAGS += -DRTMP_EFUSE_SUPPORT 
#-DNEW_MBSSID_MODE 
WFLAGS += -DCONFIG_ANDES_SUPPORT
HAS_NEW_RATE_ADAPT_SUPPORT=y
ifeq ($(HAS_NEW_RATE_ADAPT_SUPPORT),y)
WFLAGS += -DNEW_RATE_ADAPT_SUPPORT
endif

#WFLAGS += -DMT7603_FPGA -DCONFIG_FPGA_MODE
WFLAGS += -DCONFIG_FPGA_MODE
WFLAGS += -DRELEASE_EXCLUDE

HAS_MT_BBP=y
HAS_MT_MAC=y
HAS_INF_USB=y
HAS_MAC_USB=y
HAS_MT_MAC=y
HAS_MT_RF=y

CHIPSET_DAT = 2870
endif
## End of MT7603 ##

# MT7628
ifneq ($(findstring mt7628,$(CHIPSET)),)
WFLAGS += -DMT7628 -DMT_BBP -DMT_RF -DRTMP_RBUS_SUPPORT -DRTMP_RF_RW_SUPPORT -DMT_MAC -DRTMP_MAC_PCI -DRTMP_PCI_SUPPORT
WFLAGS += -DRTMP_EFUSE_SUPPORT
WFLAGS += -DCONFIG_ANDES_SUPPORT -DDMA_SCH_SUPPORT
HAS_NEW_RATE_ADAPT_SUPPORT=y
ifeq ($(HAS_NEW_RATE_ADAPT_SUPPORT),y)
WFLAGS += -DNEW_RATE_ADAPT_SUPPORT
endif
HAS_RATE_ADAPT_AGS_SUPPORT=n
ifeq ($(HAS_RATE_ADAPT_AGS_SUPPORT),y)
WFLAGS += -DAGS_ADAPT_SUPPORT
endif
#WFLAGS += -DNEW_MBSSID_MODE -DENHANCE_NEW_MBSSID_MODE
WFLAGS += -DENHANCED_STAT_DISPLAY
WFLAGS += -DFIFO_EXT_SUPPORT
WFLAGS += -DMCS_LUT_SUPPORT
WFLAGS += -DUSE_BMC -DTHERMAL_PROTECT_SUPPORT

#WFLAGS += -DMT7628_FPGA -DCONFIG_FPGA_MODE


HAS_MT_BBP=y
HAS_MT_MAC=y
HAS_INF_RBUS=y
HAS_MAC_PCI=y
HAS_MT_MAC=y
HAS_MT_RF=y
#CHIPSET_DAT = 2860
endif
## End of MT7628 ##

#################################################


ifeq ($(HAS_BLOCK_NET_IF),y)
WFLAGS += -DBLOCK_NET_IF
endif

ifeq ($(HAS_DFS_SUPPORT),y)
WFLAGS += -DDFS_SUPPORT
endif

ifeq ($(HAS_LLTD),y)
WFLAGS += -DLLTD_SUPPORT
endif

ifeq ($(PLATFORM),RALINK_3050)
WFLAGS += -DRALINK_3052
endif


